//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&lt {
    bindings = <&sl>, <&kp>;

    tapping-term-ms = <200>;
    quick-tap-ms = <200>;
    flavor = "balanced";
};

&mt {
    bindings = <&sk>, <&kp>;

    tapping-term-ms = <200>;
    quick-tap-ms = <200>;
    flavor = "balanced";
};

&mmv {
    time-to-max-speed-ms = <680>;
    acceleration-exponent = <2>;
};

/ {
    behaviors {
        hm: home_row_mod {
            display-name = "Home Row Mod";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&sk>, <&kp>;

            tapping-term-ms = <280>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <150>;
            flavor = "tap-preferred";
        };

        ls: layer_sticky_tap {
            display-name = "Layer-Sticky Tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&lt>, <&sk>;

            tapping-term-ms = <280>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };

        // Quick hold tap, i.e. for auto-shift

        ht: hold_tap {
            display-name = "Hold Tap (Quick)";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };

        atab: alt_tab {
            display-name = "Alt-Tab";
            compatible = "zmk,behavior-tri-state";
            #binding-cells = <0>;
            bindings = <&kt LALT>, <&kp TAB>, <&kt LALT>;
        };

        ctab: ctrl_tab {
            display-name = "Ctrl-Tab";
            compatible = "zmk,behavior-tri-state";
            #binding-cells = <0>;
            bindings = <&kt LCTL>, <&kp TAB>, <&kt LCTL>;
        };

        gtab: gui_tab {
            display-name = "Ctrl-Tab";
            compatible = "zmk,behavior-tri-state";
            #binding-cells = <0>;
            bindings = <&kt LGUI>, <&kp TAB>, <&kt LGUI>;
        };

        // Unmodded: Left Shift | With Shift: Caps Word.

        ms_l: magic_left_shift {
            display-name = "Magic Shift";
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&sk LSHFT>, <&caps_word>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        // Unmodded: Right Shift | With Shift: Caps Word.

        ms_r: magic_right_shift {
            display-name = "Magic Shift";
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&sk RSHFT>, <&caps_word>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        // Hold: &ms_l | Tap: &kp

        msl_t: magic_left_shift_tap {
            display-name = "Magic Shift-Tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&ms_l>, <&kp>;

            tapping-term-ms = <280>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };

        // Hold: &ms_r | Tap: &kp

        msr_t: magic_right_shift_tap {
            display-name = "Magic Shift-Tap (Right)";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&ms_r>, <&kp>;

            tapping-term-ms = <280>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };

        hold_cw: hold_caps_word {
            display-name = "Hold Caps Word";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&sh_cw>;

            tapping-term-ms = <280>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };

        sh_cw: hold_shift_tap_caps_word {
            display-name = "Hold Shift, Tap Caps Word";
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&kp LSHFT>, <&caps_word>;

            tapping-term-ms = <150>;
        };

        dot_excl: dot_excl {
            display-name = "Period-Exclamation Mark";
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp EXCL>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        cmma_qmark: cmma_qmark {
            display-name = "Comma-Question Mark";
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp QMARK>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        fslh_tild: fslh_tild {
            display-name = "Forward Slash-Tilde";
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp FSLH>, <&kp TILDE>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        htat: alt_tab_hold_tap {
            display-name = "Alt-Tab (Hold-Tap)";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&atab>, <&kp>;

            tapping-term-ms = <250>;
            quick-tap-ms = <250>;
            flavor = "balanced";
        };

        htde: dot_excl_hold_tap {
            display-name = "Period-Exclamation Mark (Hold-Tap)";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&dot_excl>;

            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };

        htcq: cmma_qmark_hold_tap {
            display-name = "Comma-Question Mark (Hold-Tap)";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&cmma_qmark>;

            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };

        htft: fslh_tild_hold_tap {
            display-name = "Forward Slash-Tilde (Hold-Tap)";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&fslh_tild>;

            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };

        alt_f1: alt_f1 {
            display-name = "N1-F1";
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N1>, <&kp F1>;

            mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_f2: alt_f2 {
            display-name = "N2-F2";
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N2>, <&kp F2>;

            mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_f3: alt_f3 {
            display-name = "N3-F3";
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N3>, <&kp F3>;

            mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_f4: alt_f4 {
            display-name = "N4-F4";
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N4>, <&kp F4>;

            mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_f5: alt_f5 {
            display-name = "N5-F5";
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N5>, <&kp F5>;

            mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_f6: alt_f6 {
            display-name = "N6-F6";
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N6>, <&kp F6>;

            mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_f7: alt_f7 {
            display-name = "N7-F7";
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N7>, <&kp F7>;

            mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_f8: alt_f8 {
            display-name = "N8-F8";
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N8>, <&kp F8>;

            mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_f9: alt_f9 {
            display-name = "N9-F9";
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N9>, <&kp F9>;

            mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_f10: alt_f10 {
            display-name = "N10-F10";
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N0>, <&kp F10>;

            mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_f11: alt_f11 {
            display-name = "N11-F11";
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp MINUS>, <&kp F11>;

            mods = <(MOD_LALT|MOD_RALT)>;
        };

        alt_f12: alt_f12 {
            display-name = "N12-F12";
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp EQUAL>, <&kp F12>;

            mods = <(MOD_LALT|MOD_RALT)>;
        };

        lpar_lt: lpar_lt {
            compatible = "zmk,behavior-mod-morph";
            label = "LPAR_LT";
            bindings = <&kp LPAR>, <&kp LT>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        rpar_gt: rpar_gt {
            compatible = "zmk,behavior-mod-morph";
            label = "RPAR_GT";
            bindings = <&kp RPAR>, <&kp GT>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        lbkt_lbrc: lbkt_lbrc {
            compatible = "zmk,behavior-mod-morph";
            label = "LBKT_LBRC";
            bindings = <&kp LBKT>, <&kp LBRC>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        rbkt_rbrc: rbkt_rbrc {
            compatible = "zmk,behavior-mod-morph";
            label = "RBKT_RBRC";
            bindings = <&kp RBKT>, <&kp RBRC>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        star_fslh: star_fslh {
            compatible = "zmk,behavior-mod-morph";
            label = "STAR_FSLH";
            bindings = <&kp STAR>, <&kp FSLH>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        htsf: star_fslh_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&star_fslh>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "tap-preferred";
            quick-tap-ms = <0>;
        };

        htlplt: lpar_lt_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&lpar_lt>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };

        htlblb: lbkt_lbrc_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&lbkt_lbrc>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };

        htrpgt: rpar_gt_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&rpar_gt>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };

        htrbrb: rbkt_rbrc_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&rbkt_rbrc>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };
    };

    macros {
        copy: copy {
            display-name = "Copy";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(C)>;
        };

        cut: cut {
            display-name = "Cut";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(X)>;
        };

        paste: paste {
            display-name = "Paste";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(V)>;
        };

        undo: undo {
            display-name = "Undo";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(Z)>;
        };

        redo: redo {
            display-name = "Redo";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LS(Z))>;
        };

        launcher: launcher {
            display-name = "Launcher";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LG(SPACE)>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LG(SPACE)>;
        };

        swapper: swapper {
            display-name = "Swapper";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&htat 0 LA(TAB)>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&htat 0 LA(TAB)>;
        };

        /**
         * Swap windows
         * Windows/Linux: Grave-Tab
         * MacOS: Ctrl-Tab (Cmd-Tab if CMD_SWAP)
         */

        swap_w: swap_win {
            display-name = "Swap Win";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&to 0>, <&macro_tap>, <&gtab>;
        };

        /**
         * Swap applications
         * Windows/Linux: Alt-Tab
         * MacOS: Cmd-Tab
         */

        swap_a: swap_app {
            display-name = "Swap App";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&to 0>, <&macro_tap>, <&ctab>;
        };

        // Hold: Caps Lock; Tap: Caps Word

        cw: caps_lock_caps_word {
            display-name = "Caps Word-Hold";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&hold_cw CAPS 0>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&hold_cw CAPS 0>;
        };

        as: autoshift {
            display-name = "Autoshift";
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &macro_param_1to2 &ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &macro_param_1to2 &ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>;
        };

        sh: shifted_keypress {
            display-name = "Shifted Keypress";
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&kp LSHFT &macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER &kp LSHFT>;
        };

        csh: custom_shifted_keypress {
            display-name = "Shifted Keypress (Custom)";
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_tap>, <&macro_param_1to1 &kp MACRO_PLACEHOLDER>;
        };

        asde: autoshift_dot_excl {
            display-name = "Period-Exclamation Mark (Autoshift)";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&htde EXCL 0>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&htde EXCL 0>;
        };

        ascq: autoshift_cmma_qmark {
            display-name = "Comma-Question Mark (Autoshift)";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&htcq QMARK 0>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&htcq QMARK 0>;
        };

        asft: autoshift_fslh_tild {
            display-name = "Forward Slash-Tilde (Autoshift)";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&htft TILD 0>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&htft TILD 0>;
        };

        assf: autoshift_star_fslh {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&htsf FSLH 0>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&htsf FSLH 0>;
        };

        aslp: aslp {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&htlplt LT 0>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&htlplt LT 0>;

            label = "ASLP";
        };

        aslb: aslb {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&htlblb LBRC 0>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&htlblb LBRC 0>;

            label = "ASLB";
        };

        asrp: asrp {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&htrpgt GT 0>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&htrpgt GT 0>;

            label = "ASRP";
        };

        asrb: asrb {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&htrbrb RBRC 0>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&htrbrb RBRC 0>;

            label = "ASRB";
        };
    };

    combos {
        compatible = "zmk,combos";

        to_base {
            bindings = <&to 0>;
            key-positions = <0 1>;
        };

        to_game {
            bindings = <&to 1>;
            key-positions = <2 1>;
        };

        wm_combo {
            bindings = <&swapper>;
            key-positions = <2 3>;  // FP
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <10 11>;  //  AR
        };

        lalt {
            bindings = <&sk LALT>;
            key-positions = <11 12>; // RS
        };

        lgui {
            bindings = <&sk LGUI>;
            key-positions = <11 12 13>; // RST
        };

        lctl {
            bindings = <&sk LCTRL>;
            key-positions = <12 13>;  // ST
        };

        rctl {
            bindings = <&sk LCTRL>;
            key-positions = <15 16>;  // NE
        };

        rgui {
            bindings = <&sk LGUI>;
            key-positions = <15 16 17>;  // NEI
        };

        ralt {
            bindings = <&sk LALT>;
            key-positions = <16 17>;  // IO
        };

        bt_prv {
            bindings = <&bt BT_PRV>;
            key-positions = <5 6>;  // J L
        };

        bt_nxt {
            bindings = <&bt BT_NXT>;
            key-positions = <6 7>;  // L U
        };

        bt_clr {
            bindings = <&bt BT_CLR>;
            key-positions = <6 7 8>; // J L U
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            display-name = "base";

            //         ┏━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┓ ┏━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┓
            //         ┃   Q   ┃   W   ┃   F   ┃   P   ┃   B   ┃ ┃   J   ┃   L   ┃   U   ┃   Y   ┃   '   ┃
            //         ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫
            //         ┃   A   ┃   R   ┃   S   ┃   T   ┃   G   ┃ ┃   M   ┃   N   ┃   E   ┃   I   ┃   O   ┃
            // ┏━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┓
            // ┃ ⌥-TAB ┃   Z   ┃   X   ┃   C   ┃   D   ┃   V   ┃ ┃   K   ┃   H   ┃   ,   ┃   .   ┃   /   ┃ ⌥-TAB ┃
            // ┗━━━━━━━┻━━━━━━━┻━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┻━━━━━━━┻━━━━━━━┛
            //                         ┃  ESC  ┃  SPC  ┃  TAB  ┃ ┃  RET  ┃ BSPC  ┃  DEL  ┃
            //                         ┗━━━━━━━┻━━━━━━━┻━━━━━━━┛ ┗━━━━━━━┻━━━━━━━┻━━━━━━━┛

            bindings = <
          &kp Q            &kp W       &lt 3 F  &kp P            &kp B              &kp J            &kp L           &lt 3 U  &kp Y       &as SQT
          &hm LC(LSHFT) A  &hm LALT R  &lt 2 S  &hm LGUI T       &hm LC(LSHFT) G    &hm LC(LSHFT) M  &hm LGUI N      &lt 2 E  &hm LALT I  &kp O
&swapper  &kp Z            &kp X       &kp C    &kp D            &kp V              &kp K            &kp H           &ascq    &asde       &asft    &swapper
                                       &kp ESC  &mt LCTRL SPACE  &msl_t 0 TAB       &msr_t 0 RET     &mt LCTRL BSPC  &kp DEL
            >;
        };

        game {
            display-name = "game";

            //         ┏━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┓
            //         ┃   Q   ┃   W   ┃   F   ┃   P   ┃   B   ┃
            //         ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫
            //         ┃   A   ┃   R   ┃   S   ┃   T   ┃   G   ┃
            // ┏━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫
            // ┃  num  ┃   Z   ┃   X   ┃   C   ┃   D   ┃   V   ┃
            // ┗━━━━━━━┻━━━━━━━┻━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫
            //                         ┃  ESC  ┃  SPC  ┃  TAB  ┃
            //                         ┗━━━━━━━┻━━━━━━━┻━━━━━━━┛

            bindings = <
       &kp Q  &kp W  &kp F         &kp P            &kp B            &kp J          &kp L           &kp U         &kp Y    &kp APOS
       &kp A  &kp R  &kp S         &kp T            &kp G            &kp M          &kp N           &kp E         &kp I    &kp O
&sl 2  &kp Z  &kp X  &kp C         &kp D            &kp V            &kp K          &kp H           &kp COMMA     &kp DOT  &kp FSLH  &sl 2
                     &mt LALT ESC  &mt LCTRL SPACE  &mt LSHFT TAB    &mt LSHFT RET  &mt LCTRL BSPC  &mt LALT DEL
            >;
        };

        num {
            display-name = "number";

            //         ┏━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┓ ┏━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┓
            //         ┃   [   ┃   7   ┃   8   ┃   9   ┃   ]   ┃ ┃   {   ┃   &   ┃   #   ┃   @   ┃   }   ┃
            //         ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫
            //         ┃   +   ┃   4   ┃   5   ┃   6   ┃   =   ┃ ┃   ^   ┃   _   ┃   `   ┃   $   ┃   :   ┃
            // ┏━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┓
            // ┃       ┃   *   ┃   1   ┃   2   ┃   3   ┃   \   ┃ ┃   |   ┃   %   ┃   <   ┃   >   ┃   ;   ┃       ┃
            // ┗━━━━━━━┻━━━━━━━┻━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┻━━━━━━━┻━━━━━━━┛
            //                         ┃   +   ┃   0   ┃   -   ┃ ┃   (   ┃   )   ┃   `   ┃
            //                         ┗━━━━━━━┻━━━━━━━┻━━━━━━━┛ ┗━━━━━━━┻━━━━━━━┻━━━━━━━┛

            bindings = <
        &kp KP_MINUS  &kp KP_N7       &kp KP_N8    &kp KP_N9       &assf                  &kp BSLH            &aslp           &kp HASH     &asrp          &kp GRAVE
        &kp KP_PLUS   &hm LALT KP_N4  &lt 2 KP_N5  &hm LGUI KP_N6  &hm LS(LCTRL) EQUAL    &hm LC(LSHFT) AMPS  &hm LGUI CARET  &lt 2 GRAVE  &hm LALT DLLR  &kp COLON
&trans  &kp KP_N0     &kp KP_N1       &kp KP_N2    &kp KP_N3       &kp DOT                &kp PIPE            &aslb           &kp PERCENT  &asrb          &kp SEMI   &trans
                                      &mt LALT N5  &mt LCTRL N0    &mt LSHFT MINUS        &mt LSHFT UNDER     &sk LCTRL       &sk LALT
            >;
        };

        nav {
            display-name = "move";

            //         ┏━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┓ ┏━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┓
            //         ┃  ^-Q  ┃  ^-W  ┃  ^-F  ┃  ^-P  ┃  ^-B  ┃ ┃ HOME  ┃ PG DN ┃ PG UP ┃  END  ┃ mouse ┃
            //         ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫
            //         ┃  ^-A  ┃  ^-R  ┃  ^-S  ┃  ^-T  ┃  ^-G  ┃ ┃ LEFT  ┃ DOWN  ┃  UP   ┃ RIGHT ┃ PSCRN ┃
            // ┏━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┓
            // ┃       ┃  ^-Z  ┃  ^-X  ┃  ^-C  ┃  ^-V  ┃ ^-⇧-Z ┃ ┃  ^-K  ┃  ^-H  ┃  ^-,  ┃  ^-.  ┃  ^-/  ┃       ┃
            // ┗━━━━━━━┻━━━━━━━┻━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┻━━━━━━━┻━━━━━━━┛
            //                         ┃       ┃       ┃       ┃ ┃       ┃       ┃       ┃
            //                         ┗━━━━━━━┻━━━━━━━┻━━━━━━━┛ ┗━━━━━━━┻━━━━━━━┻━━━━━━━┛

            bindings = <
        &kp F12  &kp F7       &lt 3 F8  &kp F9        &kp F15              &kp HOME   &kp PG_DN  &lt 3 PG_UP  &kp END    &kp INS
        &kp F11  &hm LALT F4  &kp F5    &hm LCTRL F6  &mt LC(LSHFT) F14    &kp LEFT   &kp DOWN   &kp UP       &kp RIGHT  &kp PSCRN
&trans  &kp F10  &kp F1       &kp F2    &kp F3        &kp F13              &sk LSHFT  &sk LCTRL  &sk LALT     &sk LGUI   &none      &none
                              &trans    &trans        &trans               &trans     &trans     &trans
            >;
        };
    };
};
