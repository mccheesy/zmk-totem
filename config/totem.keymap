//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&lt {
    quick-tap-ms = <200>;
    flavor = "balanced";
    require-prior-idle-ms = <125>;
    tapping-term-ms = <150>;
};

&mt {
    quick-tap-ms = <200>;
    flavor = "balanced";
    require-prior-idle-ms = <125>;
    tapping-term-ms = <150>;
};

/ {
    behaviors {
        hm: home_row_mod {
            display-name = "Home Row Mod";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            tapping-term-ms = <150>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            flavor = "tap-preferred";
        };

        ht: hold_tap {
            display-name = "Hold Tap (Quick)";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            tapping-term-ms = <150>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <125>;
        };

        ht_as: hold_tap_autoshift {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&sh>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            flavor = "tap-preferred";
        };

        mm_cq: mod_morph_cmma_qmark {
            display-name = "Comma-Question Mark";
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp QMARK>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        ht_cq: hold_tap_cmma_qmark {
            display-name = "Comma-Question Mark (Hold-Tap)";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&mm_cq>;

            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };

        mm_cs: mod_morph_coln_semi {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp COLON>, <&kp SEMI>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        ht_cs: hold_tap_coln_semi {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&mm_cs>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };

        mm_de: mod_morph_dot_excl {
            display-name = "Period-Exclamation Mark";
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp EXCL>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        ht_de: hold_tap_dot_excl {
            display-name = "Period-Exclamation Mark (Hold-Tap)";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&mm_de>;

            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };

        mm_ft: mod_morph_fslh_tild {
            display-name = "Forward Slash-Tilde";
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp FSLH>, <&kp TILDE>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        ht_ft: hold_tap_fslh_tild {
            display-name = "Forward Slash-Tilde (Hold-Tap)";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&mm_ft>;

            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };

        mm_ll: mod_morph_lpar_lt {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp LPAR>, <&kp LT>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        ht_ll: hold_tap_lpar_lt {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&mm_ll>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };

        mm_rg: mod_morph_rpar_gt {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp RPAR>, <&kp GT>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        ht_rg: hold_tap_rpar_gt {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&mm_rg>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };

        mm_st: mod_morph_semi_tild {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp SEMI>, <&kp TILDE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        ht_st: hold_tap_semi_tild {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&mm_st>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };
    };

    macros {
        launcher: launcher {
            display-name = "Launcher";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LG(SPACE)>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LG(SPACE)>;
        };

        swapper: swapper {
            display-name = "Swapper";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LA(TAB)>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LA(TAB)>;
        };

        as: autoshift {
            display-name = "Autoshift";
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &macro_param_1to2 &ht_as MACRO_PLACEHOLDER MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &macro_param_1to2 &ht_as MACRO_PLACEHOLDER MACRO_PLACEHOLDER>;
        };

        sh: shifted_keypress {
            display-name = "Shifted Keypress";
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&kp LSHFT &macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER &kp LSHFT>;
        };

        as_cq: autoshift_cmma_qmark {
            display-name = "Comma-Question Mark (Autoshift)";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&ht_cq QMARK 0>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&ht_cq QMARK 0>;
        };

        as_cs: autoshift_coln_semi {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&ht_cs SEMI 0>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&ht_cs SEMI 0>;
        };

        as_de: autoshift_dot_excl {
            display-name = "Period-Exclamation Mark (Autoshift)";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&ht_de EXCL 0>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&ht_de EXCL 0>;
        };

        as_ft: autoshift_fslh_tild {
            display-name = "Forward Slash-Tilde (Autoshift)";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&ht_ft TILD 0>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&ht_ft TILD 0>;
        };

        as_ll: autoshift_lpar_lt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&ht_ll LT 0>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&ht_ll LT 0>;
        };

        as_rg: autoshift_rpar_gt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&ht_rg GT 0>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&ht_rg GT 0>;
        };

        as_st: autoshift_semi_tild {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&ht_st TILDE 0>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&ht_st TILDE 0>;
        };
    };

    combos {
        compatible = "zmk,combos";
        sticky_sys {
            bindings = <&sl 3>;
            key-positions = <2 3>;
            layers = <0>;
        };

        esc {
            bindings = <&kp ESC>;
            key-positions = <12 13>;
            layers = <0>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <14 15>;
            layers = <0>;
        };

        sticky_lalt {
            bindings = <&sk LALT>;
            key-positions = <10 11>;
            layers = <0 1 2>;
        };

        sticky_ralt {
            bindings = <&sk LALT>;
            key-positions = <18 19>;
            layers = <0 1 2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base { // 0
            display-name = "base";

            //         ┏━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┓ ┏━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┓
            //         ┃   Q   ┃   W   ┃   F   ┃   P   ┃   B   ┃ ┃   J   ┃   L   ┃   U   ┃   Y   ┃   '   ┃
            //         ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫
            //         ┃   A   ┃   R   ┃   S   ┃   T   ┃   G   ┃ ┃   M   ┃   N   ┃   E   ┃   I   ┃   O   ┃
            // ┏━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┓
            // ┃       ┃   Z   ┃   X   ┃   C   ┃   D   ┃   V   ┃ ┃   K   ┃   H   ┃   ,   ┃   .   ┃   /   ┃       ┃
            // ┗━━━━━━━┻━━━━━━━┻━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┻━━━━━━━┻━━━━━━━┛
            //                         ┃  ESC  ┃  SPC  ┃  TAB  ┃ ┃  RET  ┃ BSPC  ┃  DEL  ┃
            //                         ┗━━━━━━━┻━━━━━━━┻━━━━━━━┛ ┗━━━━━━━┻━━━━━━━┻━━━━━━━┛

            bindings = <
       &kp Q       &kp W  &kp F              &kp P            &kp B            &kp J          &kp L       &kp U              &kp Y   &as SQT
       &hm LGUI A  &kp R  &lt 2 S            &lt 1 T          &kp G            &kp M          &lt 1 N     &lt 2 E            &kp I   &hm RGUI O
&none  &kp Z       &kp X  &kp C              &kp D            &kp V            &kp K          &kp H       &as_cq             &as_de  &as_ft   &none
                          &mt LC(LSHFT) ESC  &mt LCTRL SPACE  &mt LSHFT TAB    &mt RSHFT RET  &lt 1 BSPC  &mt RC(RSHFT) DEL
            >;
        };

        num { // 1
            display-name = "number";

            //         ┏━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┓ ┏━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┓
            //         ┃   (   ┃   7   ┃   8   ┃   9   ┃   )   ┃ ┃  HOME ┃ PG DN ┃ PG UP ┃  END  ┃  INS  ┃
            //         ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫
            //         ┃   +   ┃   4   ┃   5   ┃   6   ┃   =   ┃ ┃  LEFT ┃  DOWN ┃   UP  ┃ RIGHT ┃  ^-⇧  ┃
            // ┏━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┓
            // ┃       ┃   *   ┃   1   ┃   2   ┃   3   ┃   /   ┃ ┃       ┃       ┃       ┃       ┃ PSCRN ┃       ┃
            // ┗━━━━━━━┻━━━━━━━┻━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┻━━━━━━━┻━━━━━━━┛
            //                         ┃   .   ┃   0   ┃   -   ┃ ┃       ┃       ┃       ┃
            //                         ┗━━━━━━━┻━━━━━━━┻━━━━━━━┛ ┗━━━━━━━┻━━━━━━━┻━━━━━━━┛

            bindings = <
       &kp LPAR  &as N7  &as N8             &as N9        &kp RPAR           &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &kp INS
       &kp PLUS  &as N4  &as N5             &as N6        &kp EQUAL          &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &kp RC(RSHFT)
&none  &kp STAR  &as N1  &as N2             &as N3        &kp FSLH           &none     &none      &none      &none      &ht PSCRN LC(PSCRN)  &none
                         &mt LC(LSHFT) DOT  &mt LCTRL N0  &mt LSHFT MINUS    &none     &trans     &none
            >;
        };

        sym { // 2
            display-name = "symbol";

            //         ┏━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┓ ┏━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┓
            //         ┃   <   ┃   [   ┃   #   ┃   ]   ┃   >   ┃ ┃   &   ┃   [   ┃   #   ┃   ]   ┃   `   ┃
            //         ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫
            //         ┃   +   ┃   (   ┃   @   ┃   )   ┃   =   ┃ ┃   ^   ┃   (   ┃   @   ┃   )   ┃   $   ┃
            // ┏━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┓
            // ┃       ┃   *   ┃   {   ┃   %   ┃   }   ┃   /   ┃ ┃   \   ┃   {   ┃   %   ┃   }   ┃   ;   ┃       ┃
            // ┗━━━━━━━┻━━━━━━━┻━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┻━━━━━━━┻━━━━━━━┛
            //                         ┃   ~   ┃   .   ┃   -   ┃ ┃   _   ┃   :   ┃   |   ┃
            //                         ┗━━━━━━━┻━━━━━━━┻━━━━━━━┛ ┗━━━━━━━┻━━━━━━━┻━━━━━━━┛

            bindings = <
       &kp LT    &kp LBKT  &kp HASH             &kp RBKT       &kp GT             &kp AMPS         &kp LBKT         &kp HASH             &kp RBKT  &kp GRAVE
       &kp PLUS  &kp LPAR  &kp AT               &kp RPAR       &kp EQUAL          &kp CARET        &hm RGUI LPAR    &as AT               &kp RPAR  &kp DLLR
&none  &kp STAR  &kp LBRC  &kp PRCNT            &kp RBRC       &kp FSLH           &kp BSLH         &kp LBRC         &kp PRCNT            &kp RBRC  &kp SEMI   &none
                           &mt LC(LSHFT) TILDE  &mt LCTRL DOT  &mt LSHFT MINUS    &mt RSHFT UNDER  &mt RCTRL COLON  &mt RC(RSHIFT) PIPE
            >;
        };

        fun { // 3
            display-name = "fun";

            //         ┏━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┓ ┏━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┓
            //         ┃  F15  ┃   F7  ┃   F8  ┃   F9  ┃  F12  ┃ ┃ RESET ┃  BOOT ┃  OUT  ┃       ┃       ┃
            //         ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫
            //         ┃  F14  ┃   F4  ┃   F5  ┃   F6  ┃  F11  ┃ ┃  BT0  ┃  BT1  ┃  BT2  ┃  BT3  ┃  BT4  ┃
            // ┏━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┓
            // ┃       ┃  F13  ┃   F1  ┃   F2  ┃   F3  ┃  F10  ┃ ┃       ┃       ┃       ┃       ┃       ┃       ┃
            // ┗━━━━━━━┻━━━━━━━┻━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┻━━━━━━━┻━━━━━━━┛
            //                         ┃       ┃       ┃       ┃ ┃       ┃       ┃ BTCLR ┃
            //                         ┗━━━━━━━┻━━━━━━━┻━━━━━━━┛ ┗━━━━━━━┻━━━━━━━┻━━━━━━━┛

            bindings = <
       &kp F15            &kp F7       &kp F8  &kp F9        &ht LC(LS(F12)) F12    &bootloader   &sys_reset    &out OUT_TOG  &none         &none
       &hm LC(LSHFT) F14  &hm LALT F4  &kp F5  &hm LCTRL F6  &ht LC(LS(F11)) F11    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&none  &kp F13            &kp F1       &kp F2  &kp F3        &kp F10    &none       &none         &none         &none         &none         &none         &none
                                       &trans  &trans        &trans     &trans      &none         &none         &bt BT_CLR
            >;
        };
    };
};
