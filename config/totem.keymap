//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&lt {
    bindings = <&sl>, <&kp>;

    tapping-term-ms = <200>;
    quick-tap-ms = <200>;
    flavor = "balanced";
};

&mt {
    bindings = <&sk>, <&kp>;

    tapping-term-ms = <200>;
    quick-tap-ms = <200>;
    flavor = "balanced";
};

&mmv {
    time-to-max-speed-ms = <680>;
    acceleration-exponent = <2>;
};

/ {
    behaviors {
        hm: home_row_mod {
            display-name = "Home Row Mod";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&sk>, <&kp>;

            tapping-term-ms = <280>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <150>;
            flavor = "tap-preferred";
        };

        // Quick hold tap, i.e. for auto-shift

        ht: hold_tap {
            display-name = "Hold Tap (Quick)";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };

        // Unmodded: Left Shift | With Shift: Caps Word.
        // Unmodded: Right Shift | With Shift: Caps Word.
        // Hold: &ms_l | Tap: &kp
        // Hold: &ms_r | Tap: &kp

        dot_excl: dot_excl {
            display-name = "Period-Exclamation Mark";
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp EXCL>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        cmma_qmark: cmma_qmark {
            display-name = "Comma-Question Mark";
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp QMARK>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        fslh_tild: fslh_tild {
            display-name = "Forward Slash-Tilde";
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp FSLH>, <&kp TILDE>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        htde: dot_excl_hold_tap {
            display-name = "Period-Exclamation Mark (Hold-Tap)";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&dot_excl>;

            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };

        htcq: cmma_qmark_hold_tap {
            display-name = "Comma-Question Mark (Hold-Tap)";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&cmma_qmark>;

            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };

        htft: fslh_tild_hold_tap {
            display-name = "Forward Slash-Tilde (Hold-Tap)";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&fslh_tild>;

            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };
    };

    macros {
        launcher: launcher {
            display-name = "Launcher";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LG(SPACE)>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LG(SPACE)>;
        };

        swapper: swapper {
            display-name = "Swapper";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LA(TAB)>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LA(TAB)>;
        };

        /**
         * Swap windows
         * Windows/Linux: Grave-Tab
         * MacOS: Ctrl-Tab (Cmd-Tab if CMD_SWAP)
         */
        /**
         * Swap applications
         * Windows/Linux: Alt-Tab
         * MacOS: Cmd-Tab
         */
        // Hold: Caps Lock; Tap: Caps Word

        as: autoshift {
            display-name = "Autoshift";
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &macro_param_1to2 &ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &macro_param_1to2 &ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>;
        };

        sh: shifted_keypress {
            display-name = "Shifted Keypress";
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&kp LSHFT &macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER &kp LSHFT>;
        };

        csh: custom_shifted_keypress {
            display-name = "Shifted Keypress (Custom)";
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_tap>, <&macro_param_1to1 &kp MACRO_PLACEHOLDER>;
        };

        asde: autoshift_dot_excl {
            display-name = "Period-Exclamation Mark (Autoshift)";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&htde EXCL 0>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&htde EXCL 0>;
        };

        ascq: autoshift_cmma_qmark {
            display-name = "Comma-Question Mark (Autoshift)";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&htcq QMARK 0>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&htcq QMARK 0>;
        };

        asft: autoshift_fslh_tild {
            display-name = "Forward Slash-Tilde (Autoshift)";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&htft TILD 0>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&htft TILD 0>;
        };
    };

    combos {
        compatible = "zmk,combos";

        to_base {
            bindings = <&to 0>;
            key-positions = <0 1>;
        };

        to_game {
            bindings = <&to 1>;
            key-positions = <2 1>;
        };

        bt_prv {
            bindings = <&bt BT_PRV>;
            key-positions = <5 6>;  // J L
        };

        bt_nxt {
            bindings = <&bt BT_NXT>;
            key-positions = <6 7>;  // L U
        };

        bt_clr {
            bindings = <&bt BT_CLR>;
            key-positions = <6 7 5>; // J L U
        };

        out {
            bindings = <&out OUT_TOG>;
            key-positions = <8 9>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            display-name = "base";

            //         ┏━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┓ ┏━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┓
            //         ┃   Q   ┃   W   ┃   F   ┃   P   ┃   B   ┃ ┃   J   ┃   L   ┃   U   ┃   Y   ┃   '   ┃
            //         ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫
            //         ┃   A   ┃   R   ┃   S   ┃   T   ┃   G   ┃ ┃   M   ┃   N   ┃   E   ┃   I   ┃   O   ┃
            // ┏━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┓
            // ┃ ⌥-TAB ┃   Z   ┃   X   ┃   C   ┃   D   ┃   V   ┃ ┃   K   ┃   H   ┃   ,   ┃   .   ┃   /   ┃ ⌥-TAB ┃
            // ┗━━━━━━━┻━━━━━━━┻━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┻━━━━━━━┻━━━━━━━┛
            //                         ┃  ESC  ┃  SPC  ┃  TAB  ┃ ┃  RET  ┃ BSPC  ┃  DEL  ┃
            //                         ┗━━━━━━━┻━━━━━━━┻━━━━━━━┛ ┗━━━━━━━┻━━━━━━━┻━━━━━━━┛

            bindings = <
          &kp Q                &kp W       &lt 3 F       &kp P            &kp B              &kp J            &kp L           &lt 3 U       &kp Y       &as SQT
          &hm LC(LA(LSHFT)) A  &hm LALT R  &lt 2 S       &hm LGUI T       &hm LC(LSHFT) G    &hm RC(RSHFT) M  &hm RGUI N      &lt 2 E       &hm LALT I  &hm RC(LA(RSHFT)) O
&swapper  &kp Z                &kp X       &kp C         &kp D            &kp V              &kp K            &kp H           &ascq         &asde       &asft                &launcher
                                           &mt LALT ESC  &mt LCTRL SPACE  &mt LSHFT TAB      &mt RSHFT RET    &mt LCTRL BSPC  &mt LALT DEL
            >;
        };

        game {
            display-name = "game";

            //         ┏━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┓
            //         ┃   Q   ┃   W   ┃   F   ┃   P   ┃   B   ┃
            //         ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫
            //         ┃   A   ┃   R   ┃   S   ┃   T   ┃   G   ┃
            // ┏━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫
            // ┃  num  ┃   Z   ┃   X   ┃   C   ┃   D   ┃   V   ┃
            // ┗━━━━━━━┻━━━━━━━┻━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫
            //                         ┃  ESC  ┃  SPC  ┃  TAB  ┃
            //                         ┗━━━━━━━┻━━━━━━━┻━━━━━━━┛

            bindings = <
          &kp Q  &kp W  &kp E         &kp R            &lt 3 T          &kp Y          &kp U           &lt 3 I       &kp O  &kp P
          &kp A  &kp S  &kp D         &kp F            &kp G            &kp H          &kp J           &lt 2 K       &kp L  &as APOS
&swapper  &kp Z  &kp X  &kp C         &kp V            &lt 2 B          &kp N          &kp M           &ascq         &asde  &asft     &launcher
                        &mt LALT ESC  &mt LCTRL SPACE  &mt LSHFT TAB    &mt RSHFT RET  &mt LCTRL BSPC  &mt LALT DEL
            >;
        };

        num {
            display-name = "number";

            //         ┏━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┓ ┏━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┓
            //         ┃   [   ┃   7   ┃   8   ┃   9   ┃   ]   ┃ ┃   {   ┃   &   ┃   #   ┃   @   ┃   }   ┃
            //         ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫
            //         ┃   +   ┃   4   ┃   5   ┃   6   ┃   =   ┃ ┃   ^   ┃   _   ┃   `   ┃   $   ┃   :   ┃
            // ┏━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┓
            // ┃       ┃   *   ┃   1   ┃   2   ┃   3   ┃   \   ┃ ┃   |   ┃   %   ┃   <   ┃   >   ┃   ;   ┃       ┃
            // ┗━━━━━━━┻━━━━━━━┻━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┻━━━━━━━┻━━━━━━━┛
            //                         ┃   +   ┃   0   ┃   -   ┃ ┃   (   ┃   )   ┃   `   ┃
            //                         ┗━━━━━━━┻━━━━━━━┻━━━━━━━┛ ┗━━━━━━━┻━━━━━━━┻━━━━━━━┛

            bindings = <
        &kp LBKT                   &kp KP_N7       &kp KP_N8        &kp KP_N9           &kp RBKT                  &kp AMPS            &kp LBRC         &kp HASH       &kp RBRC       &kp AT
        &hm LA(LC(LSHFT)) KP_PLUS  &hm LALT KP_N4  &lt 2 KP_N5      &hm LGUI KP_N6      &hm LS(LCTRL) KP_EQUAL    &hm RC(RSHFT) PIPE  &hm RGUI LPAR    &lt 2 GRAVE    &hm LALT RPAR  &hm RC(LA(RSHFT)) COLON
&trans  &kp KP_N0                  &kp KP_N1       &kp KP_N2        &kp KP_N3           &kp KP_MULTIPLY           &kp BSLH            &kp LT           &kp PERCENT    &kp GT         &kp SEMI                 &trans
                                                   &mt LALT KP_DOT  &mt LCTRL KP_MINUS  &mt LSHFT KP_ENTER        &mt RSHFT CARET     &mt RCTRL UNDER  &mt LALT DLLR
            >;
        };

        nav {
            display-name = "move";

            //         ┏━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┓ ┏━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┓
            //         ┃  ^-Q  ┃  ^-W  ┃  ^-F  ┃  ^-P  ┃  ^-B  ┃ ┃ HOME  ┃ PG DN ┃ PG UP ┃  END  ┃ mouse ┃
            //         ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫
            //         ┃  ^-A  ┃  ^-R  ┃  ^-S  ┃  ^-T  ┃  ^-G  ┃ ┃ LEFT  ┃ DOWN  ┃  UP   ┃ RIGHT ┃ PSCRN ┃
            // ┏━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┓
            // ┃       ┃  ^-Z  ┃  ^-X  ┃  ^-C  ┃  ^-V  ┃ ^-⇧-Z ┃ ┃  ^-K  ┃  ^-H  ┃  ^-,  ┃  ^-.  ┃  ^-/  ┃       ┃
            // ┗━━━━━━━┻━━━━━━━┻━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┻━━━━━━━┻━━━━━━━┛
            //                         ┃       ┃       ┃       ┃ ┃       ┃       ┃       ┃
            //                         ┗━━━━━━━┻━━━━━━━┻━━━━━━━┛ ┗━━━━━━━┻━━━━━━━┻━━━━━━━┛

            bindings = <
        &kp F15                &kp F7       &lt 3 F8  &kp F9        &kp F12              &kp HOME   &kp PG_DN  &lt 3 PG_UP  &kp END    &kp INS
        &hm LC(LA(LSHFT)) F14  &hm LALT F4  &kp F5    &hm LCTRL F6  &mt LC(LSHFT) F11    &kp LEFT   &kp DOWN   &kp UP       &kp RIGHT  &kp PSCRN
&trans  &kp F13                &kp F1       &kp F2    &kp F3        &kp F10              &sk LSHFT  &sk LCTRL  &sk LALT     &sk LGUI   &none      &none
                                            &trans    &trans        &trans               &trans     &trans     &trans
            >;
        };
    };
};
