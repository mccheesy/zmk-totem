//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&lt {
    quick-tap-ms = <200>;
    flavor = "balanced";
    require-prior-idle-ms = <125>;
    tapping-term-ms = <150>;
};

&mt {
    quick-tap-ms = <200>;
    flavor = "balanced";
    require-prior-idle-ms = <125>;
    tapping-term-ms = <150>;
};

/ {
    behaviors {
        hml: home_row_mod_left {
            display-name = "Home Row Mod";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <5 7 6 8 9 19 30 31 18 17 16 15 26 28 27 29 37 36 35 34 33 32>;
        };

        ht: hold_tap {
            display-name = "Hold Tap (Quick)";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            tapping-term-ms = <150>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <125>;
        };

        ht_as: hold_tap_autoshift {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&sh>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            flavor = "tap-preferred";
        };

        mm_cq: mod_morph_cmma_qmark {
            display-name = "Comma-Question Mark";
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp QMARK>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        ht_cq: hold_tap_cmma_qmark {
            display-name = "Comma-Question Mark (Hold-Tap)";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&mm_cq>;

            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };

        mm_cs: mod_morph_coln_semi {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp COLON>, <&kp SEMI>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        ht_cs: hold_tap_coln_semi {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&mm_cs>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };

        mm_de: mod_morph_dot_excl {
            display-name = "Period-Exclamation Mark";
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp EXCL>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        ht_de: hold_tap_dot_excl {
            display-name = "Period-Exclamation Mark (Hold-Tap)";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&mm_de>;

            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };

        mm_ft: mod_morph_fslh_tild {
            display-name = "Forward Slash-Tilde";
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp FSLH>, <&kp TILDE>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        ht_ft: hold_tap_fslh_tild {
            display-name = "Forward Slash-Tilde (Hold-Tap)";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&mm_ft>;

            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };

        mm_ll: mod_morph_lpar_lt {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp LPAR>, <&kp LT>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        ht_ll: hold_tap_lpar_lt {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&mm_ll>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };

        mm_rg: mod_morph_rpar_gt {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp RPAR>, <&kp GT>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        ht_rg: hold_tap_rpar_gt {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&mm_rg>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };

        mm_st: mod_morph_semi_tild {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp SEMI>, <&kp TILDE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        ht_st: hold_tap_semi_tild {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&mm_st>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 14 13 12 11 10 20 21 22 23 24 25 32 33 34 35 36 37>;
        };

        hll: home_row_layer_tap_left {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <5 6 7 9 31 19 29 18 17 8 16 15 26 27 28 30 37 36 35 34 33 32>;
        };

        hlr: home_row_layer_tap_right {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <4 3 2 1 0 20 10 11 21 12 13 14 23 22 24 25 32 33 34 35 36 37>;
        };
    };

    macros {
        launcher: launcher {
            display-name = "Launcher";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LG(SPACE)>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LG(SPACE)>;
        };

        swapper: swapper {
            display-name = "Swapper";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LA(TAB)>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LA(TAB)>;
        };

        as: autoshift {
            display-name = "Autoshift";
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &macro_param_1to2 &ht_as MACRO_PLACEHOLDER MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &macro_param_1to2 &ht_as MACRO_PLACEHOLDER MACRO_PLACEHOLDER>;
        };

        sh: shifted_keypress {
            display-name = "Shifted Keypress";
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&kp LSHFT &macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER &kp LSHFT>;
        };

        as_cq: autoshift_cmma_qmark {
            display-name = "Comma-Question Mark (Autoshift)";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&ht_cq QMARK 0>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&ht_cq QMARK 0>;
        };

        as_cs: autoshift_coln_semi {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&ht_cs SEMI 0>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&ht_cs SEMI 0>;
        };

        as_de: autoshift_dot_excl {
            display-name = "Period-Exclamation Mark (Autoshift)";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&ht_de EXCL 0>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&ht_de EXCL 0>;
        };

        as_ft: autoshift_fslh_tild {
            display-name = "Forward Slash-Tilde (Autoshift)";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&ht_ft TILD 0>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&ht_ft TILD 0>;
        };

        as_ll: autoshift_lpar_lt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&ht_ll LT 0>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&ht_ll LT 0>;
        };

        as_rg: autoshift_rpar_gt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&ht_rg GT 0>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&ht_rg GT 0>;
        };

        as_st: autoshift_semi_tild {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&ht_st TILDE 0>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&ht_st TILDE 0>;
        };
    };

    combos {
        compatible = "zmk,combos";

        sticky_sys {
            bindings = <&sl 3>;
            key-positions = <2 3>;
            layers = <0>;
        };

        esc_l {
            bindings = <&kp ESC>;
            key-positions = <12 11>;
            layers = <0>;
        };

        tab_l {
            bindings = <&kp TAB>;
            key-positions = <13 12>;
            layers = <0>;
        };

        sticky_lctrl_lshft {
            bindings = <&sk LS(LCTRL)>;
            key-positions = <10 11>;
            layers = <0 1 2>;
        };

        sticky_rctrl_rshft {
            bindings = <&sk RS(RCTRL)>;
            key-positions = <18 19>;
            layers = <0 1 2>;
        };

        esc_r {
            bindings = <&kp ESC>;
            key-positions = <17 18>;
        };

        tab_r {
            bindings = <&kp TAB>;
            key-positions = <16 17>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            display-name = "base";

            //         ┏━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┓ ┏━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┓
            //         ┃   Q   ┃   W   ┃   F   ┃   P   ┃   B   ┃ ┃   J   ┃   L   ┃   U   ┃   Y   ┃   '   ┃
            //         ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫
            //         ┃   A   ┃   R   ┃   S   ┃   T   ┃   G   ┃ ┃   M   ┃   N   ┃   E   ┃   I   ┃   O   ┃
            // ┏━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┓
            // ┃       ┃   Z   ┃   X   ┃   C   ┃   D   ┃   V   ┃ ┃   K   ┃   H   ┃   ,   ┃   .   ┃   /   ┃       ┃
            // ┗━━━━━━━┻━━━━━━━┻━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┻━━━━━━━┻━━━━━━━┛
            //                         ┃  ESC  ┃  SPC  ┃  TAB  ┃ ┃  RET  ┃ BSPC  ┃  DEL  ┃
            //                         ┗━━━━━━━┻━━━━━━━┻━━━━━━━┛ ┗━━━━━━━┻━━━━━━━┻━━━━━━━┛

            bindings = <
       &kp Q        &kp W        &hll 3 F      &kp P            &kp B            &kp J          &kp L       &hlr 3 U      &kp Y        &as SQT
       &hml LGUI A  &hml LALT R  &hll 2 S      &hll 1 T         &kp G            &kp M          &hlr 1 N    &hlr 2 E      &hmr LALT I  &hmr RGUI O
&none  &kp Z        &kp X        &kp C         &kp D            &kp V            &kp K          &kp H       &as_cq        &as_de       &as_ft       &none
                                 &mt LALT ESC  &mt LCTRL SPACE  &mt LSHFT TAB    &mt RSHFT RET  &lt 1 BSPC  &mt LALT DEL
            >;
        };

        num {
            display-name = "number";

            //         ┏━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┓ ┏━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┓
            //         ┃   (   ┃   7   ┃   8   ┃   9   ┃   )   ┃ ┃  HOME ┃ PG DN ┃ PG UP ┃  END  ┃  INS  ┃
            //         ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫
            //         ┃   +   ┃   4   ┃   5   ┃   6   ┃   =   ┃ ┃  LEFT ┃  DOWN ┃   UP  ┃ RIGHT ┃  ^-⇧  ┃
            // ┏━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┓
            // ┃       ┃   *   ┃   1   ┃   2   ┃   3   ┃   /   ┃ ┃       ┃       ┃       ┃       ┃ PSCRN ┃       ┃
            // ┗━━━━━━━┻━━━━━━━┻━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┻━━━━━━━┻━━━━━━━┛
            //                         ┃   .   ┃   0   ┃   -   ┃ ┃       ┃       ┃       ┃
            //                         ┗━━━━━━━┻━━━━━━━┻━━━━━━━┛ ┗━━━━━━━┻━━━━━━━┻━━━━━━━┛

            bindings = <
       &kp LT          &kp N7        &kp N8        &kp N9        &kp GT             &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &kp INS
       &hml LGUI PLUS  &hml LALT N4  &kp N5        &kp N6        &kp EQUAL          &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &hmr RC(PSCRN) PSCRN
&none  &kp STAR        &kp N1        &kp N2        &as N3        &kp FSLH           &none     &none      &none      &none      &none                 &none
                                     &mt LALT DOT  &mt LCTRL N0  &mt LSHFT MINUS    &trans    &trans     &trans
            >;
        };

        sym {
            display-name = "symbol";

            //         ┏━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┓ ┏━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┓
            //         ┃   <   ┃   [   ┃   #   ┃   ]   ┃   >   ┃ ┃   &   ┃   [   ┃   #   ┃   ]   ┃   `   ┃
            //         ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫
            //         ┃   +   ┃   (   ┃   @   ┃   )   ┃   =   ┃ ┃   ^   ┃   (   ┃   @   ┃   )   ┃   $   ┃
            // ┏━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┓
            // ┃       ┃   *   ┃   {   ┃   %   ┃   }   ┃   /   ┃ ┃   \   ┃   {   ┃   %   ┃   }   ┃   ;   ┃       ┃
            // ┗━━━━━━━┻━━━━━━━┻━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┻━━━━━━━┻━━━━━━━┛
            //                         ┃   ~   ┃   .   ┃   -   ┃ ┃   _   ┃   :   ┃   |   ┃
            //                         ┗━━━━━━━┻━━━━━━━┻━━━━━━━┛ ┗━━━━━━━┻━━━━━━━┻━━━━━━━┛

            bindings = <
       &as GRAVE       &kp LBKT        &kp HASH        &kp RBKT       &kp AMPS           &kp AMPS         &kp LBKT         &kp HASH           &kp RBKT        &as GRAVE
       &hml LGUI DLLR  &hml LALT LPAR  &kp AT          &kp RPAR       &kp CARET          &kp CARET        &kp LPAR         &as AT             &hmr LALT RPAR  &hmr RGUI DLLR
&none  &as SEMI        &kp LBRC        &kp PRCNT       &kp RBRC       &as BSLH           &as BSLH         &kp LBRC         &kp PRCNT          &kp RBRC        &as SEMI        &none
                                       &mt LALT TILDE  &mt LCTRL DOT  &mt LSHFT MINUS    &mt RSHFT UNDER  &mt RCTRL COLON  &mt RC(LALT) PIPE
            >;
        };

        fun {
            display-name = "fun";

            //         ┏━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┓ ┏━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┓
            //         ┃  F15  ┃   F7  ┃   F8  ┃   F9  ┃  F12  ┃ ┃ RESET ┃  BOOT ┃  OUT  ┃       ┃       ┃
            //         ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫
            //         ┃  F14  ┃   F4  ┃   F5  ┃   F6  ┃  F11  ┃ ┃  BT0  ┃  BT1  ┃  BT2  ┃  BT3  ┃  BT4  ┃
            // ┏━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┓
            // ┃       ┃  F13  ┃   F1  ┃   F2  ┃   F3  ┃  F10  ┃ ┃       ┃       ┃       ┃       ┃       ┃       ┃
            // ┗━━━━━━━┻━━━━━━━┻━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┻━━━━━━━┻━━━━━━━┛
            //                         ┃       ┃       ┃       ┃ ┃       ┃       ┃ BTCLR ┃
            //                         ┗━━━━━━━┻━━━━━━━┻━━━━━━━┛ ┗━━━━━━━┻━━━━━━━┻━━━━━━━┛

            bindings = <
       &kp F15        &kp F7        &kp F8  &kp F9  &ht LC(LS(F12)) F12    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2          &bt BT_SEL 3  &bt BT_SEL 4
       &hml LGUI F14  &hml LALT F4  &kp F5  &kp F6  &ht LS(LC(F11)) F11    &none         &none         &hmr RC(PSCRN) PSCRN  &none         &none
&none  &kp F13        &kp F1        &kp F2  &kp F3  &kp F10                &none         &none         &none                 &none         &none         &none
                                    &trans  &trans  &trans                 &trans        &trans        &trans
            >;
        };
    };
};
