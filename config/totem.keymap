//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&lt {
    quick-tap-ms = <175>;
    flavor = "balanced";
    require-prior-idle-ms = <150>;
    tapping-term-ms = <280>;
};

&mt {
    quick-tap-ms = <175>;
    flavor = "balanced";
    require-prior-idle-ms = <150>;
    tapping-term-ms = <280>;
    bindings = <&sk>, <&kp>;
};

/ {
    behaviors {
        hml: home_row_mod_left {
            display-name = "Home Row Mod";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <5 7 6 8 9 19 30 31 18 17 16 15 26 28 27 29 37 36 35 34 33 32>;
        };

        ht_as: hold_tap_autoshift {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&sh>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
        };

        mm_cq: mod_morph_cmma_qmark {
            display-name = "Comma-Question Mark";
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp QMARK>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        ht_cq: hold_tap_cmma_qmark {
            display-name = "Comma-Question Mark (Hold-Tap)";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&mm_cq>;

            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };

        mm_cs: mod_morph_coln_semi {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp COLON>, <&kp SEMI>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        ht_cs: hold_tap_coln_semi {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&mm_cs>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };

        mm_de: mod_morph_dot_excl {
            display-name = "Period-Exclamation Mark";
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp EXCL>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        ht_de: hold_tap_dot_excl {
            display-name = "Period-Exclamation Mark (Hold-Tap)";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&mm_de>;

            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };

        mm_ft: mod_morph_fslh_tild {
            display-name = "Forward Slash-Tilde";
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp FSLH>, <&kp TILDE>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        ht_ft: hold_tap_fslh_tild {
            display-name = "Forward Slash-Tilde (Hold-Tap)";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&mm_ft>;

            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };

        mm_ll: mod_morph_lpar_lt {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp LPAR>, <&kp LT>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        ht_ll: hold_tap_lpar_lt {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&mm_ll>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };

        mm_rg: mod_morph_rpar_gt {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp RPAR>, <&kp GT>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        ht_rg: hold_tap_rpar_gt {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&mm_rg>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };

        mm_st: mod_morph_semi_tild {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp SEMI>, <&kp TILDE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        ht_st: hold_tap_semi_tild {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&mm_st>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 14 13 12 11 10 20 21 22 23 24 25 32 33 34 35 36 37>;
        };

        mm_fs: mod_morph_fslh_star {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp FSLH>, <&kp STAR>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        ht_fs: hold_tap_fslh_star {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&mm_fs>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };

        mm_1c: mod_morph_1_caret {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp N1>, <&kp CARET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mm_9g: mod_morph_9_grave {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp N9>, <&kp GRAVE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mm_0b: mod_morph_0_bslh {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp N0>, <&kp BSLH>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        ht_1c: hold_tap_1_caret {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&mm_1c>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
        };

        ht_9g: hold_tap_9_grave {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&mm_9g>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <180>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
        };

        ht_0b: hold_tap_0_bslh {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&mm_0b>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
        };

        mm_6p: mod_morph_6_pipe {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp N6>, <&kp PIPE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        ht_6p: hold_tap_6_pipe {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&mm_6p>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
        };
    };

    macros {
        as: autoshift {
            display-name = "Autoshift";
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &macro_param_1to2 &ht_as MACRO_PLACEHOLDER MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &macro_param_1to2 &ht_as MACRO_PLACEHOLDER MACRO_PLACEHOLDER>;
        };

        sh: shifted_keypress {
            display-name = "Shifted Keypress";
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&kp LSHFT &macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER &kp LSHFT>;
        };

        as_cq: autoshift_cmma_qmark {
            display-name = "Comma-Question Mark (Autoshift)";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&ht_cq QMARK 0>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&ht_cq QMARK 0>;
        };

        as_cs: autoshift_coln_semi {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&ht_cs SEMI 0>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&ht_cs SEMI 0>;
        };

        as_de: autoshift_dot_excl {
            display-name = "Period-Exclamation Mark (Autoshift)";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&ht_de EXCL 0>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&ht_de EXCL 0>;
        };

        as_ft: autoshift_fslh_tild {
            display-name = "Forward Slash-Tilde (Autoshift)";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&ht_ft TILD 0>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&ht_ft TILD 0>;
        };

        as_ll: autoshift_lpar_lt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&ht_ll LT 0>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&ht_ll LT 0>;
        };

        as_rg: autoshift_rpar_gt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&ht_rg GT 0>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&ht_rg GT 0>;
        };

        as_st: autoshift_semi_tild {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&ht_st TILDE 0>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&ht_st TILDE 0>;
        };

        as_fs: autoshift_fslh_star {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&ht_fs STAR 0>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&ht_fs STAR 0>;
        };

        as_1c: autoshift_1_caret {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&ht_1c CARET 0>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&ht_1c CARET 0>;
        };

        as_9g: autoshift_9_grave {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&ht_9g GRAVE 0>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&ht_9g GRAVE 0>;
        };

        as_0b: autoshift_0_bslh {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&ht_0b BSLH 0>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&ht_0b BSLH 0>;
        };

        as_6p: autoshift_6_pipe {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&ht_6p PIPE 0>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&ht_6p PIPE 0>;
        };
    };

    combos {
        compatible = "zmk,combos";

        sticky_fun {
            bindings = <&sl 3>;
            key-positions = <2 3 1>;
            layers = <0>;
        };

        left_ctrl_shft {
            bindings = <&sk LC(LSHFT)>;
            key-positions = <34 33>;
        };

        right_ctrl_shft {
            bindings = <&sk RC(RSHFT)>;
            key-positions = <36 35>;
        };

        left_esc {
            bindings = <&kp ESC>;
            key-positions = <11 12 13>;
        };

        right_esc {
            bindings = <&kp ESC>;
            key-positions = <18 17 16>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            display-name = "base";

            //         ┏━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┓ ┏━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┓
            //         ┃   Q   ┃   W   ┃   F   ┃   P   ┃   B   ┃ ┃   J   ┃   L   ┃   U   ┃   Y   ┃   '   ┃
            //         ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫
            //         ┃   A   ┃   R   ┃   S   ┃   T   ┃   G   ┃ ┃   M   ┃   N   ┃   E   ┃   I   ┃   O   ┃
            // ┏━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┓
            // ┃       ┃   Z   ┃   X   ┃   C   ┃   D   ┃   V   ┃ ┃   K   ┃   H   ┃   ,   ┃   .   ┃   /   ┃       ┃
            // ┗━━━━━━━┻━━━━━━━┻━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┻━━━━━━━┻━━━━━━━┛
            //                         ┃  ESC  ┃  SPC  ┃  TAB  ┃ ┃  RET  ┃ BSPC  ┃  DEL  ┃
            //                         ┗━━━━━━━┻━━━━━━━┻━━━━━━━┛ ┗━━━━━━━┻━━━━━━━┻━━━━━━━┛

            bindings = <
       &kp Q  &kp W  &kp F      &kp P        &kp B            &kp J          &kp L       &kp U      &kp Y   &as APOS
       &kp A  &kp R  &kp S      &kp T        &kp G            &kp M          &kp N       &kp E      &kp I   &kp O
&none  &kp Z  &kp X  &kp C      &kp D        &kp V            &kp K          &kp H       &as_cq     &as_de  &as_ft    &none
                     &sk LCTRL  &lt 1 SPACE  &mt LSHFT TAB    &mt RSHFT RET  &lt 2 BSPC  &sk RCTRL
            >;
        };

        nav {
            display-name = "navigation";

            //         ┏━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┓ ┏━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┓
            //         ┃   (   ┃   7   ┃   8   ┃   9   ┃   )   ┃ ┃  HOME ┃ PG DN ┃ PG UP ┃  END  ┃  INS  ┃
            //         ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫
            //         ┃   +   ┃   4   ┃   5   ┃   6   ┃   =   ┃ ┃  LEFT ┃  DOWN ┃   UP  ┃ RIGHT ┃  ^-⇧  ┃
            // ┏━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┓
            // ┃       ┃   *   ┃   1   ┃   2   ┃   3   ┃   /   ┃ ┃       ┃       ┃       ┃       ┃ PSCRN ┃       ┃
            // ┗━━━━━━━┻━━━━━━━┻━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┻━━━━━━━┻━━━━━━━┛
            //                         ┃   .   ┃   0   ┃   -   ┃ ┃       ┃       ┃       ┃
            //                         ┗━━━━━━━┻━━━━━━━┻━━━━━━━┛ ┗━━━━━━━┻━━━━━━━┻━━━━━━━┛

            bindings = <
       &sk LGUI  &sk LALT  &kp LS(TAB)  &kp TAB  &as EQUAL    &kp PG_UP  &kp HOME   &kp UP    &kp END    &kp DEL
       &as_1c    &as N2    &kp N3       &kp N4   &kp N5       &kp PG_DN  &kp LEFT   &kp DOWN  &kp RIGHT  &kp COLON
&none  &as_6p    &as N7    &as N8       &as_9g   &as_0b       &as LBKT   &as_ll     &as_rg    &as RBKT   &kp SEMI   &none
                           &trans       &trans   &trans       &kp MINUS  &kp UNDER  &trans
            >;

            label = "navigation";
        };

        sym {
            display-name = "symbol";

            //         ┏━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┓ ┏━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┓
            //         ┃   <   ┃   [   ┃   #   ┃   ]   ┃   >   ┃ ┃   &   ┃   [   ┃   #   ┃   ]   ┃   `   ┃
            //         ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫
            //         ┃   +   ┃   (   ┃   @   ┃   )   ┃   =   ┃ ┃   ^   ┃   (   ┃   @   ┃   )   ┃   $   ┃
            // ┏━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┓
            // ┃       ┃   *   ┃   {   ┃   %   ┃   }   ┃   /   ┃ ┃   \   ┃   {   ┃   %   ┃   }   ┃   ;   ┃       ┃
            // ┗━━━━━━━┻━━━━━━━┻━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┻━━━━━━━┻━━━━━━━┛
            //                         ┃   ~   ┃   .   ┃   -   ┃ ┃   _   ┃   :   ┃   |   ┃
            //                         ┗━━━━━━━┻━━━━━━━┻━━━━━━━┛ ┗━━━━━━━┻━━━━━━━┻━━━━━━━┛

            bindings = <
       &kp DEL    &kp HOME  &kp UP    &kp END    &kp PG_UP    &as EQUAL  &kp LS(TAB)  &kp TAB  &sk LALT  &sk LGUI
       &kp COLON  &kp LEFT  &kp DOWN  &kp RIGHT  &kp PG_DN    &as_1c     &as N2       &as N3   &as N4    &as N5
&none  &kp SEMI   &as LBKT  &as_ll    &as_rg     &as RBKT     &as_6p     &as N7       &as N8   &as_9g    &as_0b    &none
                            &trans    &kp UNDER  &kp MINUS    &trans     &trans       &trans
            >;
        };

        fun {
            display-name = "fun";

            //         ┏━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┓ ┏━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┓
            //         ┃  F15  ┃   F7  ┃   F8  ┃   F9  ┃  F12  ┃ ┃ RESET ┃  BOOT ┃  OUT  ┃       ┃       ┃
            //         ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫
            //         ┃  F14  ┃   F4  ┃   F5  ┃   F6  ┃  F11  ┃ ┃  BT0  ┃  BT1  ┃  BT2  ┃  BT3  ┃  BT4  ┃
            // ┏━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┓
            // ┃       ┃  F13  ┃   F1  ┃   F2  ┃   F3  ┃  F10  ┃ ┃       ┃       ┃       ┃       ┃       ┃       ┃
            // ┗━━━━━━━┻━━━━━━━┻━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┫ ┣━━━━━━━╋━━━━━━━╋━━━━━━━╋━━━━━━━┻━━━━━━━┻━━━━━━━┛
            //                         ┃       ┃       ┃       ┃ ┃       ┃       ┃ BTCLR ┃
            //                         ┗━━━━━━━┻━━━━━━━┻━━━━━━━┛ ┗━━━━━━━┻━━━━━━━┻━━━━━━━┛

            bindings = <
       &sys_reset  &bootloader  &none    &none    &out OUT_TOG    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
       &kp F1      &kp F2       &kp F3   &kp F4   &kp F5          &kp F6        &kp F7        &kp F8        &kp F9        &kp F10
&none  &kp F11     &kp F12      &kp F13  &kp F14  &kp F15         &kp F16       &kp F17       &kp F18       &kp F19       &kp F20       &none
                                &trans   &trans   &trans          &trans        &trans        &trans
            >;
        };
    };
};
